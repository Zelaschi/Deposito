@page "/admin/reserva"

<PageTitle>Crear Reserva</PageTitle>

@using BusinessLogic
@using Domain
@using ControllerLayer

@inject Controller Controller
@inject NavigationManager NavigationManager


<h1>
    Lista Reservas
</h1>
<h1>
    <a href="/admin/reserva/seleccionar-fechas" class="btn btn-success btn-sm" style="float: right;margin-right: 40px;">Crear Reserva</a>
</h1>


<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Fecha Desde</th>
        <th>Fecha Hasta</th>
        <th>Deposito</th>
        <th>Precio</th> 
        <th>Estado</th>
        <th>Cliente</th>
        <th>Acciones</th>
    </tr>
    </thead>
    <tbody>
        @foreach(var reserva in reservasRegistradas)
        {
            <tr>
                <td>@reserva.Id</td>
                <td>@reserva.FechaDesde.ToString("MM/dd/yyyy")</td>
                <td>@reserva.FechaHasta.ToString("MM/dd/yyyy")</td>
                <td>@reserva.Deposito.Nombre Id: @reserva.Deposito.Id</td>
                <td>@reserva.PrecioReserva</td>
                <td>@reserva.Estado</td>
                <td>@reserva.Cliente.NombreYApellido</td>
                <td>
                    @if (reserva.Pago.EstadoPago.Equals("Pendiente"))
                    {
                        <p>Pago pendiente</p>
                    }
                    else
                    {
                        @if (reserva.Estado == "Pendiente")
                        {
                            <button class="btn btn-success btn-sm" @onclick="(() => AceptarReserva(reserva))">Aceptar</button>
                            <button class="btn btn-danger btn-sm" @onclick="(() => GuardarRechazo(reserva))">Rechazar</button>
                            <textarea class="form-control" placeholder="Motivo rechazo" @bind="unaJustificacion" rows="1" cols="3"></textarea>
                            @if (!datosCorrectos)
                            {
                                <p class="text-danger">@mensajeError</p>
                            }
                        }
                    }
                </td>
            </tr>
        }
        <div class="form-group m-2">
            <label for="title">Generar Reporte de reservas</label>
            <br />
            <select class="form-select" name="formato" id="Formato" @bind="unFormato">
                <option selected>Seleccione un formato</option>
                <option value="TXT">TXT</option>
                <option value="CSV">CSV</option>
            </select>
        </div>
        <button type="button" class="btn btn-primary m-2" @onclick="GenerarReporte">Generar Reporte</button>
        @if (reporteGenerado)
        {
            <p class="text-success">@mensajeReporteGenerado</p>
        }
        @if (!string.IsNullOrEmpty(mensajeError))
        {
            <p class="text-danger">@mensajeError</p>
        }
    </tbody>
</table>



@code {
    private List<DTOReserva> reservasRegistradas;
    private bool reservaRechazada = false;
    private string unaJustificacion;
    private bool datosCorrectos = true;
    private string mensajeError;
    private string unFormato;
    private bool reporteGenerado = false;
    private string mensajeReporteGenerado;

    protected override void OnInitialized()
    {
        reservasRegistradas = Controller.ListarTodasLasReservas().ToList();
    }

    private void RechazarReserva(DTOReserva reserva)
    {
        reserva.Estado = "Rechazada";
        Controller.RechazarReserva(reserva);
        reservasRegistradas = Controller.ListarTodasLasReservas().ToList();

    }

    private void AceptarReserva(DTOReserva reserva)
    {
        try
        {
            Controller.AceptarReserva(reserva);
            reserva.Estado = "Aprobada";
            reservasRegistradas = Controller.ListarTodasLasReservas().ToList();
        }
        catch (Exception e)
        {
            datosCorrectos = false;
            mensajeError = e.Message;
        }
    }
    private void MostrarJustificacion(DTOReserva reserva)
    {
        reservaRechazada = true;
    }

    private void GuardarRechazo(DTOReserva reserva)
    {
        try
        {
            if (unaJustificacion == null)
            {
                throw new Exception("Falta justificacion");    
            }
            Controller.RechazarReserva(reserva);
            reserva.Estado = "Rechazada";
            Controller.justificacionRechazo(unaJustificacion, reserva);
        }
        catch (Exception e)
        {
            datosCorrectos = false;
            mensajeError = e.Message;
        }

    }

    private void GenerarReporte()
    {
        if (string.IsNullOrEmpty(unFormato) || unFormato == "Seleccione un formato")
        {
            mensajeError = "Seleccione un formato para el reporte";
            datosCorrectos = false;
        }
        else
        {
            try
            {
                Controller.GenerarReporteReservas(unFormato);
                reporteGenerado = true;
                mensajeReporteGenerado = "Reporte generado correctamente, lo puede ver en la carpeta Reportes";
            }
            catch (Exception e)
            {
                datosCorrectos = false;
                mensajeError = e.Message;
            }
        }
    }
}
