@page "/"
@layout LoginLayout

<PageTitle>Lista Depositos</PageTitle>

@inject NavigationManager NavigationManager

@using ControllerLayer

@inject Controller Controller
@inject DTOSesion DtoSesion

@if (Controller.EstaRegistradoAdministrador())
{
    
    <main class="container d-flex flex-column align-items-center">
        <h1 class="mb-4 mt-5">Log In</h1>
        <form class="w-25">
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="text" class="form-control" id="email" aria-describedby="Email" @bind="email">
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" aria-describedby="Email" @bind="password">
                @if (!errorOk)
                {
                    <p class="text-danger">@errorMessage</p>
                }
            </div>
            <div class="container d-flex flex-column align-items-center mt-4">
                <button type="button" class="btn btn-primary" @onclick="EjecutarLogin">Log in</button>
            </div>
        </form>
        <p class="mt-4"><a class="text-black">Log in</a>/<a href="/registro">Registrar</a></p>
    </main>
}
else
{
    <main class="container d-flex flex-column align-items-center">
        <h1>Registrar Administrador</h1>
        <form>
            <div class="form-group m-2">
                <label for="nombreyapellido">Nombre y Apellido</label>
                <input type="text" class="form-control" id="NombreYApellido" @bind="unNombreYApellido" />
            </div>
            <div class="form-group m-2">
                <label for="mail">Mail</label>
                <input type="text" class="form-control" id="Mail" @bind="unMail" />
            </div>
            <div class="form-group m-2">
                <label for="title">Contraseña</label>
                <input type="text" class="form-control" id="Contrasenia1" @bind="unaContrasenia1" />
            </div>
            <div class="form-group m-2">
                <label for="title">Repetir contraseña</label>
                <input type="text" class="form-control" id="Contrasenia2" @bind="unaContrasenia2" />
            </div>
            @if (!datosCorrectos)
            {
                <p class="text-danger">@errorMessage</p>
            }
            <button type="button" class="btn btn-primary m-2" @onclick="RegistrarAdministrador">Registrar Administrador</button>
        </form>
    </main>

}
@code {
    private DTOAdministrador admin;
    private string unNombreYApellido;
    private string unMail;
    private string unaContrasenia1;
    private string unaContrasenia2;
    private bool datosCorrectos = true;
    private string mensajeError;

    private void RegistrarAdministrador()
    {
        try
        {
            if (!unaContrasenia1.Equals(unaContrasenia2))
            {
                throw new Exception("Las contraseñas deben ser iguales!");
            }
            admin = new(unNombreYApellido, unMail, unaContrasenia1);
            Controller.RegistrarAdministrador(admin);
            NavigationManager.NavigateTo("/");
        }
        catch (DatabaseExceptionController e)
        {
            NavigationManager.NavigateTo("/ErrorBD");
        }
        catch (Exception e)
        {
            datosCorrectos = false;
            errorMessage = e.Message;
        }
    }

    private string email;
    private string password;
    private bool errorOk;
    private string errorMessage;

    protected override void OnInitialized()
    {
        errorOk = true;
    }

    private void EjecutarLogin()
    {
        try
        {
            if (Controller.LogIn(email, password))
            {
                DtoSesion.SesionMail = email;
                DtoSesion.LogIn = true;
                if (Controller.esAdministrador(email))
                {
                    DtoSesion.EsAdministrador = true;    
                }

                if (DtoSesion.EsAdministrador)
                {
                    NavigationManager.NavigateTo($"/admin");

                }
                else
                {
                    NavigationManager.NavigateTo($"/cliente");

                }
            }
        }
        catch (DatabaseExceptionController e)
        {
            NavigationManager.NavigateTo("/ErrorBD");
        }
        catch (Exception e)
        {
            errorOk = false;
            errorMessage = e.Message;
        }
    }

}

